{"ast":null,"code":"var _jsxFileName = \"/Users/lawson/code/newboba/boba/frontend-node/src/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport { useFetchWrapper } from \"./_helpers\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upload(item) {\n  _s();\n\n  const fetchWrapper = useFetchWrapper();\n  const [community, setCommunity] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n  var items = [];\n\n  function getBase64(file) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      var base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\n      setFile(base64String);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  function changeFileEvent(e) {\n    console.log(\"WHAT\");\n    setFilename(e.target.files[0].name);\n    getBase64(e.target.files[0]);\n  }\n\n  function uploa() {\n    return fetchWrapper.post(process.env.REACT_APP_API_URL + \"/upload\", {\n      \"file\": file,\n      \"filename\": filename,\n      \"title\": title,\n      \"community\": community,\n      \"text\": text\n    });\n  }\n\n  function seCommunity(e) {\n    setCommunity(e);\n\n    if (e.length == 0) {\n      document.getElementById(\"searchAutocomplete\").style = \"display: none;\";\n    } else {\n      document.getElementById(\"searchAutocomplete\").style = \"display: block;\";\n    }\n\n    fetchWrapper.get(process.env.REACT_APP_API_URL + \"/search-communities?query=\" + e).then(result => {\n      items = [result];\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-containerv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-containerh\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-bubble\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginform lf\",\n          onSubmit: uploa,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"lf\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"in cl si\",\n              type: \"text\",\n              name: \"title\",\n              placeholder: \"Title\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"in cl si\",\n              type: \"text\",\n              name: \"community\",\n              placeholder: \"Community\",\n              onChange: e => seCommunity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"searchAutocomplete\",\n              className: \"searchAutocomplete\",\n              children: items.map(item => {\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: item\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 109\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              className: \"in cl si\",\n              rows: \"4\",\n              cols: \"25\",\n              name: \"posttext\",\n              placeholder: \"Post text\",\n              onChange: e => setText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"bt in\",\n              type: \"file\",\n              name: \"file\",\n              onChange: e => changeFileEvent(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"bt in\",\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fp\",\n            children: \" Forgot password? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Upload, \"1XirPWOxaKPfEwKs+cOu4lWkdEw=\", false, function () {\n  return [useFetchWrapper];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/Upload.js"],"names":["React","useState","logo","useFetchWrapper","useForm","yupResolver","Yup","Upload","item","fetchWrapper","community","setCommunity","title","setTitle","file","setFile","text","setText","filename","setFilename","items","getBase64","reader","FileReader","readAsDataURL","onload","base64String","result","replace","onerror","error","console","log","changeFileEvent","e","target","files","name","uploa","post","process","env","REACT_APP_API_URL","seCommunity","length","document","getElementById","style","get","then","value","map"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nimport logo from './logo.svg';\nimport { useFetchWrapper } from \"./_helpers\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nfunction Upload(item) {\n  const fetchWrapper = useFetchWrapper();\n  const [community, setCommunity] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [filename, setFilename] = useState (\"\");\n  var items = [];\n  function getBase64(file) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      var base64String = reader.result.replace(\"data:\", \"\")\n      .replace(/^.+,/, \"\");\n      setFile(base64String);\n    };\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n }\n\n  function changeFileEvent(e){\n    console.log(\"WHAT\");\n    setFilename(e.target.files[0].name);\n    getBase64(e.target.files[0]);\n  }\n  function uploa() {\n    return fetchWrapper.post(process.env.REACT_APP_API_URL+\"/upload\", {\"file\":file,\"filename\": filename, \"title\":title,\"community\":community, \"text\":text});\n  }\n\n  function seCommunity(e){\n    setCommunity(e);\n    if(e.length == 0){\n      document.getElementById(\"searchAutocomplete\").style = \"display: none;\"\n    } else{\n      document.getElementById(\"searchAutocomplete\").style = \"display: block;\"\n    }\n    fetchWrapper.get(process.env.REACT_APP_API_URL+\"/search-communities?query=\"+e).then(result => {items = [result]});\n\n  }\n  return (\n\n      <div className=\"login-containerv\">\n          <div className = \"login-containerh\">\n    <div className=\"container-bubble\">\n          <div className=\"loginform lf\" onSubmit={uploa}>\n              <form className=\"lf\" >\n                  <input className=\"in cl si\" type=\"text\" name=\"title\" placeholder=\"Title\" onChange={e => setTitle(e.target.value)}></input>\n                  <input className=\"in cl si\" type=\"text\" name=\"community\" placeholder=\"Community\" onChange={e => seCommunity(e.target.value)}></input>\n                  <div id = \"searchAutocomplete\" className=\"searchAutocomplete\">{items.map(item => {return (<div>{item}</div>)})}</div>\n                  <textarea className=\"in cl si\" rows=\"4\" cols=\"25\" name=\"posttext\" placeholder=\"Post text\" onChange={e => setText(e.target.value)}></textarea>\n                  <input className=\"bt in\" type=\"file\" name=\"file\" onChange={e => changeFileEvent(e)}/>\n                  <input className=\"bt in\" type=\"submit\"></input>\n              </form>\n              <span className=\"fp\" > Forgot password? </span>\n          </div>\n      </div>\n      </div>\n      </div>\n  );\n  }\nexport default Upload;"]},"metadata":{},"sourceType":"module"}