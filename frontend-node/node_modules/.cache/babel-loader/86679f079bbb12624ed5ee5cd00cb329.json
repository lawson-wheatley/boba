{"ast":null,"code":"var _jsxFileName = \"/Users/lawson/code/newboba/boba/frontend-node/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport postFeed from './Post-feed';\nimport { useRecoilValue } from 'recoil';\nimport { authAtom, usersAtom } from './_state';\nimport { useFetchWrapper } from \"./_helpers\";\nimport { useUserActions } from \"./_actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home() {\n  _s();\n\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null\n  });\n  const auth = useRecoilValue(authAtom);\n  const users = useRecoilValue(usersAtom);\n  const userActions = useUserActions();\n  const fetchWrapper = useFetchWrapper();\n  const [loaded, finishedLoading] = useState(false);\n  const items = fetchWrapper.get(\"http://127.0.0.1:80/feed\").then(result => {\n    delete result.access_token;\n    finishedLoading(true);\n    console.log(result);\n    return result;\n  });\n  useEffect(() => {\n    setAppState({\n      loading: true\n    });\n    fetchWrapper.get(\"http://127.0.0.1:80/feed\").then(res => res.json()).then(repos => {\n      setAppState({\n        loading: false,\n        repos: repos\n      });\n    });\n  }, [setAppState]);\n  console.log(items);\n\n  if (!loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"FUCK\",\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed\",\n      children: items.map(item => postFeed(item))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(Home, \"K3gTEg9EUuwBONReVrkY+F9EPZs=\", false, function () {\n  return [useRecoilValue, useRecoilValue, useUserActions, useFetchWrapper];\n});\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/Home.js"],"names":["React","useState","logo","postFeed","useRecoilValue","authAtom","usersAtom","useFetchWrapper","useUserActions","Home","appState","setAppState","loading","repos","auth","users","userActions","fetchWrapper","loaded","finishedLoading","items","get","then","result","access_token","console","log","useEffect","res","json","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,cAAT,QAA+B,QAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,UAApC;AACA,SAASC,eAAT,QAAgC,YAAhC;AACA,SAASC,cAAT,QAA+B,YAA/B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AAEd,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC;AACvCW,IAAAA,OAAO,EAAE,KAD8B;AAEvCC,IAAAA,KAAK,EAAE;AAFgC,GAAD,CAAxC;AAIA,QAAMC,IAAI,GAAGV,cAAc,CAACC,QAAD,CAA3B;AACA,QAAMU,KAAK,GAAGX,cAAc,CAACE,SAAD,CAA5B;AACA,QAAMU,WAAW,GAAGR,cAAc,EAAlC;AACA,QAAMS,YAAY,GAAGV,eAAe,EAApC;AACA,QAAM,CAACW,MAAD,EAASC,eAAT,IAA4BlB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMmB,KAAK,GAAGH,YAAY,CAACI,GAAb,CAAiB,0BAAjB,EAA6CC,IAA7C,CAAkDC,MAAM,IAAI;AACxE,WAAOA,MAAM,CAACC,YAAd;AACAL,IAAAA,eAAe,CAAC,IAAD,CAAf;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,WAAOA,MAAP;AACD,GALa,CAAd;AAMAI,EAAAA,SAAS,CAAC,MAAM;AACdhB,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AACAK,IAAAA,YAAY,CAACI,GAAb,CAAiB,0BAAjB,EACGC,IADH,CACSM,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGP,IAFH,CAEST,KAAD,IAAW;AACfF,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEA;AAAzB,OAAD,CAAX;AACD,KAJH;AAKD,GAPQ,EAON,CAACF,WAAD,CAPM,CAAT;AAQAc,EAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;;AACA,MAAG,CAACF,MAAJ,EAAW;AACT,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAGI;AACJ,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,gBACGE,KAAK,CAACU,GAAN,CAAUC,IAAI,IAAI5B,QAAQ,CAAC4B,IAAD,CAA1B;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAIG;AACJ;;GAnCQtB,I;UAMML,c,EACCA,c,EACMI,c,EACCD,e;;;KATdE,I;AAoCT,eAAeA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport postFeed from './Post-feed'\nimport { useRecoilValue } from 'recoil'\nimport { authAtom, usersAtom } from './_state'\nimport { useFetchWrapper } from \"./_helpers\";\nimport { useUserActions } from \"./_actions\";\n\nfunction Home() {\n\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n  });\n  const auth = useRecoilValue(authAtom);\n  const users = useRecoilValue(usersAtom);\n  const userActions = useUserActions();\n  const fetchWrapper = useFetchWrapper();\n  const [loaded, finishedLoading] = useState(false);\n  const items = fetchWrapper.get(\"http://127.0.0.1:80/feed\").then(result => {\n    delete result.access_token;\n    finishedLoading(true);\n    console.log(result);\n    return result;\n  });\n  useEffect(() => {\n    setAppState({ loading: true });\n    fetchWrapper.get(\"http://127.0.0.1:80/feed\")\n      .then((res) => res.json())\n      .then((repos) => {\n        setAppState({ loading: false, repos: repos });\n      });\n  }, [setAppState]);\n  console.log(items);\n  if(!loaded){\n    return <div className=\"FUCK\">\"Loading...\"</div>;\n  }\n  else{\n  return (\n    <div className=\"feed\">\n      {items.map(item => postFeed(item))}\n    </div>\n  );}\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}