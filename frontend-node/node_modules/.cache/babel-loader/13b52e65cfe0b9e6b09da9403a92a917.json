{"ast":null,"code":"var _jsxFileName = \"/Users/lawson/code/newboba/boba/frontend-node/src/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport { useFetchWrapper } from \"./_helpers\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Upload(item) {\n  _s();\n\n  const fetchWrapper = useFetchWrapper();\n  const [community, setCommunity] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [filename, setFilename] = useState(\"\");\n\n  function getBase64(file) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = function () {\n      console.log(reader.result);\n    };\n\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n  }\n\n  function changeFileEvent(e) {\n    setFilename(e.target.files[0]);\n    var f = getBase64(e.target.files[0]);\n    setFile(f);\n  }\n\n  function uploa() {\n    return fetchWrapper.post(\"http://127.0.0.1:80/upload\", {\n      \"file\": file,\n      \"filename\": file.name,\n      \"title\": title,\n      \"community\": community,\n      \"text\": text\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-containerv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-containerh\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-bubble\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginform lf\",\n          onSubmit: uploa,\n          children: [/*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"lf\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"in cl si\",\n              type: \"text\",\n              name: \"title\",\n              placeholder: \"Title\",\n              onChange: e => setTitle(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"in cl si\",\n              type: \"text\",\n              name: \"community\",\n              placeholder: \"Community\",\n              onChange: e => setCommunity(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"in cl si\",\n              type: \"textbox\",\n              name: \"posttext\",\n              placeholder: \"Post text\",\n              onChange: e => setText(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"bt in\",\n              type: \"file\",\n              name: \"file\",\n              onChange: e => changeFileEvent(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"bt in\",\n              type: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fp\",\n            children: \" Forgot password? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Upload, \"1XirPWOxaKPfEwKs+cOu4lWkdEw=\", false, function () {\n  return [useFetchWrapper];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/Upload.js"],"names":["React","useState","logo","useFetchWrapper","useForm","yupResolver","Yup","Upload","item","fetchWrapper","community","setCommunity","title","setTitle","file","setFile","text","setText","filename","setFilename","getBase64","reader","FileReader","readAsDataURL","onload","console","log","result","onerror","error","changeFileEvent","e","target","files","f","uploa","post","name","value"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\n\nimport logo from './logo.svg';\nimport { useFetchWrapper } from \"./_helpers\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\n\nfunction Upload(item) {\n  const fetchWrapper = useFetchWrapper();\n  const [community, setCommunity] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [filename, setFilename] = useState (\"\");\n  function getBase64(file) {\n    var reader = new FileReader();\n    reader.readAsDataURL(file);\n    reader.onload = function () {\n      console.log(reader.result);\n    };\n    reader.onerror = function (error) {\n      console.log('Error: ', error);\n    };\n }\n\n  function changeFileEvent(e){\n    setFilename(e.target.files[0]);\n    var f = getBase64(e.target.files[0])\n    setFile(f);}\n  function uploa() {\n    return fetchWrapper.post(\"http://127.0.0.1:80/upload\", {\"file\":file,\"filename\": file.name, \"title\":title,\"community\":community, \"text\":text});\n  }\n  return (\n\n      <div className=\"login-containerv\">\n          <div className = \"login-containerh\">\n    <div className=\"container-bubble\">\n          <div className=\"loginform lf\" onSubmit={uploa}>\n              <form className=\"lf\" >\n                  <input className=\"in cl si\" type=\"text\" name=\"title\" placeholder=\"Title\" onChange={e => setTitle(e.target.value)}></input>\n                  <input className=\"in cl si\" type=\"text\" name=\"community\" placeholder=\"Community\" onChange={e => setCommunity(e.target.value)}></input>\n                  <input className=\"in cl si\" type=\"textbox\" name=\"posttext\" placeholder=\"Post text\" onChange={e => setText(e.target.value)}></input>\n                  <input className=\"bt in\" type=\"file\" name=\"file\" onChange={e => changeFileEvent(e)}/>\n                  <input className=\"bt in\" type=\"submit\"></input>\n              </form>\n              <span className=\"fp\" > Forgot password? </span>\n          </div>\n      </div>\n      </div>\n      </div>\n  );\n  }\nexport default Upload;"]},"metadata":{},"sourceType":"module"}