{"ast":null,"code":"var _jsxFileName = \"/Users/lawson/code/newboba/boba/frontend-node/src/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport PostFeed from \"./Post-feed\";\nimport { useFetchWrapper } from \"./_helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Feed(location) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const fetchWrapper = useFetchWrapper();\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(0);\n\n  function likeContent(id) {\n    fetchWrapper.post(process.env.REACT_APP_API_URL + \"/like\", {\n      \"id\": id\n    });\n  }\n\n  function loadContent(page) {\n    if (!isLoading) {\n      setIsLoading(true);\n    }\n\n    function mapLoaded() {\n      setPage(page + 1);\n    }\n  }\n\n  function loadInitial() {\n    fetchWrapper.get(process.env.REACT_APP_API_URL + \"/feed?page=\" + 0).then(result => {\n      setItems(result);\n    });\n  }\n\n  window.addEventListener('scroll', function () {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      loadContent(page);\n    }\n  });\n  useEffect(() => {\n    if (page != 0) {\n      var mp = items.map(item => PostFeed(item, likeContent));\n      document.getElementById(\"feed\").innerHTML += mp;\n    }\n  }, [items]);\n  useEffect(() => {\n    fetchWrapper.get(process.env.REACT_APP_API_URL + \"/feed?page=\" + page).then(result => {\n      console.log(result);\n      setItems(items.concat(result));\n      setPage(page + 1);\n    }).catch(err => {});\n  }, [page]);\n  useEffect(() => {\n    setLoaded(true);\n    setIsLoading(false);\n  }, [items]);\n\n  if (!loaded) {\n    loadInitial();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load\",\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"feed\",\n      className: \"feed\",\n      children: [items.map(item => PostFeed(item, likeContent)), mapLoaded]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(Feed, \"kJtoPmetCWcarkmrW6/0kxeWaec=\", false, function () {\n  return [useFetchWrapper];\n});\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/Feed.js"],"names":["React","useEffect","useState","useParams","logo","PostFeed","useFetchWrapper","Feed","location","loaded","setLoaded","items","setItems","fetchWrapper","isLoading","setIsLoading","page","setPage","likeContent","id","post","process","env","REACT_APP_API_URL","loadContent","mapLoaded","loadInitial","get","then","result","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","mp","map","item","getElementById","innerHTML","console","log","concat","catch","err"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAGA,OAAO,SAASC,IAAT,CAAcC,QAAd,EAAwB;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,YAAY,GAAGP,eAAe,EAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAD,CAAhC;;AACA,WAASgB,WAAT,CAAqBC,EAArB,EAAwB;AACtBN,IAAAA,YAAY,CAACO,IAAb,CAAkBC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,OAAhD,EAAyD;AAAC,YAAKJ;AAAN,KAAzD;AACD;;AAED,WAASK,WAAT,CAAqBR,IAArB,EAA0B;AACxB,QAAG,CAACF,SAAJ,EAAc;AACZC,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEH;;AACD,aAASU,SAAT,GAAoB;AAClBR,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACD;AACA;;AACD,WAASU,WAAT,GAAsB;AAEpBb,IAAAA,YAAY,CAACc,GAAb,CAAiBN,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,aAA9B,GAA4C,CAA7D,EAAgEK,IAAhE,CACEC,MAAM,IAAI;AACRjB,MAAAA,QAAQ,CAACiB,MAAD,CAAR;AACD,KAHH;AAID;;AACDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAW;AAC3C,QAAKD,MAAM,CAACE,WAAP,GAAqBF,MAAM,CAACG,OAA7B,IAAyCC,QAAQ,CAACC,IAAT,CAAcC,YAA3D,EAAyE;AACtEZ,MAAAA,WAAW,CAACR,IAAD,CAAX;AACF;AACH,GAJA;AAKDf,EAAAA,SAAS,CAAC,MAAM;AAAC,QAAGe,IAAI,IAAI,CAAX,EAAa;AAC7B,UAAIqB,EAAE,GAAG1B,KAAK,CAAC2B,GAAN,CAAUC,IAAI,IAAIlC,QAAQ,CAACkC,IAAD,EAAOrB,WAAP,CAA1B,CAAT;AACCgB,MAAAA,QAAQ,CAACM,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,IAA6CJ,EAA7C;AACA;AAAC,GAHM,EAGJ,CAAC1B,KAAD,CAHI,CAAT;AAIAV,EAAAA,SAAS,CAAC,MAAM;AAACY,IAAAA,YAAY,CAACc,GAAb,CAAiBN,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,aAA9B,GAA4CP,IAA7D,EAAmEY,IAAnE,CACEC,MAAM,IAAI;AACRa,MAAAA,OAAO,CAACC,GAAR,CAAYd,MAAZ;AACAjB,MAAAA,QAAQ,CAACD,KAAK,CAACiC,MAAN,CAAaf,MAAb,CAAD,CAAR;AACAZ,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACD,KALH,EAKK6B,KALL,CAKYC,GAAD,IAAS,CACpB,CANA;AAMG,GANX,EAMa,CAAC9B,IAAD,CANb,CAAT;AAOCf,EAAAA,SAAS,CAAC,MAAM;AAAES,IAAAA,SAAS,CAAC,IAAD,CAAT;AAAiBK,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqB,GAA/C,EAAiD,CAACJ,KAAD,CAAjD,CAAT;;AACA,MAAG,CAACF,MAAJ,EAAW;AACTiB,IAAAA,WAAW;AACX,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD,MAGM;AACN,wBACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA,iBACGf,KAAK,CAAC2B,GAAN,CAAUC,IAAI,IAAIlC,QAAQ,CAACkC,IAAD,EAAOrB,WAAP,CAA1B,CADH,EAEGO,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAKE;AACH;;GArDelB,I;UAGOD,e;;;KAHPC,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport PostFeed from \"./Post-feed\";\nimport { useFetchWrapper } from \"./_helpers\";\n\n\nexport function Feed(location) {\n  const [loaded, setLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const fetchWrapper = useFetchWrapper();\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(0);\n  function likeContent(id){\n    fetchWrapper.post(process.env.REACT_APP_API_URL+\"/like\", {\"id\":id});\n  }\n  \n  function loadContent(page){\n    if(!isLoading){\n      setIsLoading(true);\n\n  }\n  function mapLoaded(){\n    setPage(page+1);\n  }\n  }\n  function loadInitial(){\n\n    fetchWrapper.get(process.env.REACT_APP_API_URL+\"/feed?page=\"+0).then(\n      result => {\n        setItems(result);\n      });\n  }\n  window.addEventListener('scroll', function() {\n    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n       loadContent(page);\n    }\n });\n useEffect(() => {if(page != 0){\n  var mp = items.map(item => PostFeed(item, likeContent));\n   document.getElementById(\"feed\").innerHTML += mp\n  }}, [items]);\n useEffect(() => {fetchWrapper.get(process.env.REACT_APP_API_URL+\"/feed?page=\"+page).then(\n                    result => {\n                      console.log(result);\n                      setItems(items.concat(result));\n                      setPage(page+1);\n                    }).catch((err) => {\n                 });}, [page]);\n  useEffect(() => { setLoaded(true); setIsLoading(false);}, [items]);\n  if(!loaded){\n    loadInitial();\n    return <div className=\"load\">\"Loading...\"</div>;\n  } else{\n  return (\n    <div id=\"feed\" className=\"feed\">\n      {items.map(item => PostFeed(item, likeContent))}\n      {mapLoaded}\n    </div>\n  )}\n}"]},"metadata":{},"sourceType":"module"}