{"ast":null,"code":"var _jsxFileName = \"/Users/lawson/code/newboba/boba/frontend-node/src/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport PostFeed from \"./Post-feed\";\nimport { useFetchWrapper } from \"./_helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Feed(location) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const fetchWrapper = useFetchWrapper();\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(-1);\n\n  function likeContent(id) {\n    fetchWrapper.post(process.env.REACT_APP_API_URL + \"/like\", {\n      \"id\": id\n    });\n  }\n\n  function loadContent(page) {\n    if (!isLoading) {\n      setPage(page + 1);\n      setIsLoading(true);\n    }\n  }\n\n  window.addEventListener('scroll', function () {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      console.log(\"you're at the bottom of the page\");\n      console.log(page);\n      loadContent(page);\n    }\n  });\n  useEffect(() => {\n    if (page != 0) {\n      document.getElementById(\"feed\").innerHTML = items.map(item => PostFeed(item, likeContent));\n    }\n  }, items);\n  useEffect(() => {\n    fetchWrapper.get(process.env.REACT_APP_API_URL + \"/feed?page=\" + page).then(result => {\n      console.log(result);\n      setItems(items.concat(result));\n    });\n  }, [page]);\n  useEffect(() => {\n    setLoaded(true);\n    setIsLoading(false);\n  }, [items]);\n  useEffect(() => {\n    if (isLoading) {}\n  }, [isLoading]);\n\n  if (!loaded) {\n    loadContent(page);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load\",\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"feed\",\n      className: \"feed\",\n      children: items.map(item => PostFeed(item, likeContent))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(Feed, \"QABPeqquQp5Ts5AEof1DB5U16WA=\", false, function () {\n  return [useFetchWrapper];\n});\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/Feed.js"],"names":["React","useEffect","useState","useParams","logo","PostFeed","useFetchWrapper","Feed","location","loaded","setLoaded","items","setItems","fetchWrapper","isLoading","setIsLoading","page","setPage","likeContent","id","post","process","env","REACT_APP_API_URL","loadContent","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","console","log","getElementById","innerHTML","map","item","get","then","result","concat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAGA,OAAO,SAASC,IAAT,CAAcC,QAAd,EAAwB;AAAA;;AAC7B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMW,YAAY,GAAGP,eAAe,EAApC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,CAAC,CAAF,CAAhC;;AAEA,WAASgB,WAAT,CAAqBC,EAArB,EAAwB;AACtBN,IAAAA,YAAY,CAACO,IAAb,CAAkBC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,OAAhD,EAAyD;AAAC,YAAKJ;AAAN,KAAzD;AACD;;AAED,WAASK,WAAT,CAAqBR,IAArB,EAA0B;AACxB,QAAG,CAACF,SAAJ,EAAc;AACZG,MAAAA,OAAO,CAACD,IAAI,GAAC,CAAN,CAAP;AACAD,MAAAA,YAAY,CAAC,IAAD,CAAZ;AAEH;AACA;;AACDU,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAW;AAC3C,QAAKD,MAAM,CAACE,WAAP,GAAqBF,MAAM,CAACG,OAA7B,IAAyCC,QAAQ,CAACC,IAAT,CAAcC,YAA3D,EAAyE;AACtEC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AAEAD,MAAAA,OAAO,CAACC,GAAR,CAAYjB,IAAZ;AACAQ,MAAAA,WAAW,CAACR,IAAD,CAAX;AACF;AACH,GAPA;AAQDf,EAAAA,SAAS,CAAC,MAAM;AAAC,QAAGe,IAAI,IAAI,CAAX,EAAa;AAACa,MAAAA,QAAQ,CAACK,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,GAA4CxB,KAAK,CAACyB,GAAN,CAAUC,IAAI,IAAIhC,QAAQ,CAACgC,IAAD,EAAOnB,WAAP,CAA1B,CAA5C;AAA2F;AAAC,GAAlH,EAAoHP,KAApH,CAAT;AACAV,EAAAA,SAAS,CAAC,MAAM;AAAOY,IAAAA,YAAY,CAACyB,GAAb,CAAiBjB,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,aAA9B,GAA4CP,IAA7D,EAAmEuB,IAAnE,CAAwEC,MAAM,IAAI;AACxGR,MAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AACF5B,MAAAA,QAAQ,CAACD,KAAK,CAAC8B,MAAN,CAAaD,MAAb,CAAD,CAAR;AACC,KAHuB;AAGpB,GAHM,EAGJ,CAACxB,IAAD,CAHI,CAAT;AAICf,EAAAA,SAAS,CAAC,MAAM;AAAES,IAAAA,SAAS,CAAC,IAAD,CAAT;AAAiBK,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB,GAA9C,EAAgD,CAACJ,KAAD,CAAhD,CAAT;AACAV,EAAAA,SAAS,CAAC,MAAM;AAAE,QAAGa,SAAH,EAAa,CAAE;AAAC,GAAzB,EAA2B,CAACA,SAAD,CAA3B,CAAT;;AACA,MAAG,CAACL,MAAJ,EAAW;AACTe,IAAAA,WAAW,CAACR,IAAD,CAAX;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD,MAGM;AACN,wBACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA,gBACGL,KAAK,CAACyB,GAAN,CAAUC,IAAI,IAAIhC,QAAQ,CAACgC,IAAD,EAAOnB,WAAP,CAA1B;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAIE;AACH;;GA1CeX,I;UAGOD,e;;;KAHPC,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport PostFeed from \"./Post-feed\";\nimport { useFetchWrapper } from \"./_helpers\";\n\n\nexport function Feed(location) {\n  const [loaded, setLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const fetchWrapper = useFetchWrapper();\n  const [isLoading, setIsLoading] = useState(false);\n  const [page, setPage] = useState(-1);\n\n  function likeContent(id){\n    fetchWrapper.post(process.env.REACT_APP_API_URL+\"/like\", {\"id\":id});\n  }\n  \n  function loadContent(page){\n    if(!isLoading){\n      setPage(page+1);\n      setIsLoading(true);\n\n  }\n  }\n  window.addEventListener('scroll', function() {\n    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n       console.log(\"you're at the bottom of the page\");\n\n       console.log(page);\n       loadContent(page);\n    }\n });\n useEffect(() => {if(page != 0){document.getElementById(\"feed\").innerHTML = items.map(item => PostFeed(item, likeContent))}}, items);\n useEffect(() => {      fetchWrapper.get(process.env.REACT_APP_API_URL+\"/feed?page=\"+page).then(result => {\n  console.log(result);\nsetItems(items.concat(result));\n});}, [page]);\n  useEffect(() => { setLoaded(true); setIsLoading(false)}, [items]);\n  useEffect(() => { if(isLoading){}}, [isLoading]);\n  if(!loaded){\n    loadContent(page);\n    return <div className=\"load\">\"Loading...\"</div>;\n  } else{\n  return (\n    <div id=\"feed\" className=\"feed\">\n      {items.map(item => PostFeed(item, likeContent))}\n    </div>\n  )}\n}"]},"metadata":{},"sourceType":"module"}