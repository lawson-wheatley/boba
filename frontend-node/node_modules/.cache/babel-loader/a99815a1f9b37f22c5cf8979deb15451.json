{"ast":null,"code":"var _jsxFileName = \"/Users/lawson/code/newboba/boba/frontend-node/src/Feed.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport PostFeed from \"./Post-feed\";\nimport { useFetchWrapper } from \"./_helpers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Feed(location, page) {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const fetchWrapper = useFetchWrapper();\n  const pg = page;\n\n  function likeContent(id) {\n    fetchWrapper.post(process.env.REACT_APP_API_URL + \"/like\", {\n      \"id\": id\n    });\n  }\n\n  function loadContent(page) {\n    fetchWrapper.get(process.env.REACT_APP_API_URL + \"/feed?page=\" + page).then(result => {\n      setItems(result);\n    });\n  }\n\n  window.addEventListener('scroll', function () {\n    if (window.innerHeight + window.scrollY >= document.body.offsetHeight) {\n      console.log(\"you're at the bottom of the page\");\n      pg += 1;\n      loadContent(pg);\n    }\n  });\n  useEffect(() => {\n    document.getElementById(\"feed\").innerHTML += items.map(item => PostFeed(item, likeContent));\n  }, items);\n  console.log(location);\n  console.log(page);\n  useEffect(() => {\n    setLoaded(true);\n  }, [items]);\n\n  if (!loaded) {\n    loadContent(pg);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"load\",\n      children: \"\\\"Loading...\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"feed\",\n      className: \"feed\",\n      children: items.map(item => PostFeed(item, likeContent))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this);\n  }\n}\n\n_s(Feed, \"PKVkzcbDMzMREsf5a5IkYmz6hTQ=\", false, function () {\n  return [useFetchWrapper];\n});\n\n_c = Feed;\n\nvar _c;\n\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/Feed.js"],"names":["React","useEffect","useState","useParams","logo","PostFeed","useFetchWrapper","Feed","location","page","loaded","setLoaded","items","setItems","fetchWrapper","pg","likeContent","id","post","process","env","REACT_APP_API_URL","loadContent","get","then","result","window","addEventListener","innerHeight","scrollY","document","body","offsetHeight","console","log","getElementById","innerHTML","map","item"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,SAASC,eAAT,QAAgC,YAAhC;;AAGA,OAAO,SAASC,IAAT,CAAcC,QAAd,EAAwBC,IAAxB,EAA8B;AAAA;;AACnC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMY,YAAY,GAAGR,eAAe,EAApC;AACA,QAAMS,EAAE,GAAGN,IAAX;;AAEA,WAASO,WAAT,CAAqBC,EAArB,EAAwB;AACtBH,IAAAA,YAAY,CAACI,IAAb,CAAkBC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,OAAhD,EAAyD;AAAC,YAAKJ;AAAN,KAAzD;AACD;;AAED,WAASK,WAAT,CAAqBb,IAArB,EAA0B;AACtBK,IAAAA,YAAY,CAACS,GAAb,CAAiBJ,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,aAA9B,GAA4CZ,IAA7D,EAAmEe,IAAnE,CAAwEC,MAAM,IAAI;AAClFZ,MAAAA,QAAQ,CAACY,MAAD,CAAR;AACD,KAFC;AAGH;;AACDC,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,YAAW;AAC3C,QAAKD,MAAM,CAACE,WAAP,GAAqBF,MAAM,CAACG,OAA7B,IAAyCC,QAAQ,CAACC,IAAT,CAAcC,YAA3D,EAAyE;AACtEC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACAnB,MAAAA,EAAE,IAAI,CAAN;AACAO,MAAAA,WAAW,CAACP,EAAD,CAAX;AACF;AACH,GANA;AAODd,EAAAA,SAAS,CAAC,MAAM;AAAC6B,IAAAA,QAAQ,CAACK,cAAT,CAAwB,MAAxB,EAAgCC,SAAhC,IAA6CxB,KAAK,CAACyB,GAAN,CAAUC,IAAI,IAAIjC,QAAQ,CAACiC,IAAD,EAAOtB,WAAP,CAA1B,CAA7C;AAA4F,GAApG,EAAsGJ,KAAtG,CAAT;AAECqB,EAAAA,OAAO,CAACC,GAAR,CAAY1B,QAAZ;AACAyB,EAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AACAR,EAAAA,SAAS,CAAC,MAAM;AAAEU,IAAAA,SAAS,CAAC,IAAD,CAAT;AAAgB,GAAzB,EAA2B,CAACC,KAAD,CAA3B,CAAT;;AACA,MAAG,CAACF,MAAJ,EAAW;AACTY,IAAAA,WAAW,CAACP,EAAD,CAAX;AACA,wBAAO;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAHD,MAGM;AACN,wBACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAe,MAAA,SAAS,EAAC,MAAzB;AAAA,gBACGH,KAAK,CAACyB,GAAN,CAAUC,IAAI,IAAIjC,QAAQ,CAACiC,IAAD,EAAOtB,WAAP,CAA1B;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAIE;AACH;;GApCeT,I;UAGOD,e;;;KAHPC,I","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport PostFeed from \"./Post-feed\";\nimport { useFetchWrapper } from \"./_helpers\";\n\n\nexport function Feed(location, page) {\n  const [loaded, setLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const fetchWrapper = useFetchWrapper();\n  const pg = page;\n\n  function likeContent(id){\n    fetchWrapper.post(process.env.REACT_APP_API_URL+\"/like\", {\"id\":id});\n  }\n  \n  function loadContent(page){\n      fetchWrapper.get(process.env.REACT_APP_API_URL+\"/feed?page=\"+page).then(result => {\n      setItems(result);\n    });\n  }\n  window.addEventListener('scroll', function() {\n    if ((window.innerHeight + window.scrollY) >= document.body.offsetHeight) {\n       console.log(\"you're at the bottom of the page\");\n       pg += 1\n       loadContent(pg);\n    }\n });\n useEffect(() => {document.getElementById(\"feed\").innerHTML += items.map(item => PostFeed(item, likeContent))}, items);\n\n  console.log(location);\n  console.log(page);\n  useEffect(() => { setLoaded(true)}, [items]);\n  if(!loaded){\n    loadContent(pg);\n    return <div className=\"load\">\"Loading...\"</div>;\n  } else{\n  return (\n    <div id=\"feed\" className=\"feed\">\n      {items.map(item => PostFeed(item, likeContent))}\n    </div>\n  )}\n}"]},"metadata":{},"sourceType":"module"}