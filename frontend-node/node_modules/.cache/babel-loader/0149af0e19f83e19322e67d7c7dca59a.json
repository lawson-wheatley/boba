{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useSetRecoilState } from 'recoil';\nimport { history, useFetchWrapper } from '../_helpers';\nimport { authAtom, usersAtom } from '../_state';\nexport { useUserActions };\n\nfunction useUserActions() {\n  _s();\n\n  const baseUrl = process.env.REACT_APP_API_URL;\n  const fetchWrapper = useFetchWrapper();\n  const setAuth = useSetRecoilState(authAtom);\n  const setUsers = useSetRecoilState(usersAtom);\n  return {\n    login,\n    logout,\n    getAll\n  };\n\n  function login(username, password) {\n    fetchWrapper.post(process.env.REACT_APP_API_URL + \"/login\", {\n      username,\n      password\n    }).then(result => {\n      // store user details and jwt token in local storage to keep user logged in between page refreshes\n      localStorage.setItem('user', JSON.stringify(result));\n      setAuth(result);\n      return result;\n    });\n  }\n\n  function logout() {\n    // remove user from local storage, set auth state to null and redirect to login page\n    localStorage.removeItem('user');\n    setAuth(null);\n    history.push('/login');\n  }\n\n  function getAll() {\n    return fetchWrapper.get(baseUrl).then(setUsers);\n  }\n}\n\n_s(useUserActions, \"fz2CnxUlTDbX3heDbnTU2cekzqo=\", false, function () {\n  return [useFetchWrapper, useSetRecoilState, useSetRecoilState];\n});","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/_actions/user-actions.js"],"names":["useSetRecoilState","history","useFetchWrapper","authAtom","usersAtom","useUserActions","baseUrl","process","env","REACT_APP_API_URL","fetchWrapper","setAuth","setUsers","login","logout","getAll","username","password","post","then","result","localStorage","setItem","JSON","stringify","removeItem","push","get"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,QAAlC;AAEA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,WAApC;AAEA,SAASC,cAAT;;AAEA,SAASA,cAAT,GAA2B;AAAA;;AACvB,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAA5B;AACA,QAAMC,YAAY,GAAGR,eAAe,EAApC;AACA,QAAMS,OAAO,GAAGX,iBAAiB,CAACG,QAAD,CAAjC;AACA,QAAMS,QAAQ,GAAGZ,iBAAiB,CAACI,SAAD,CAAlC;AAEA,SAAO;AACHS,IAAAA,KADG;AAEHC,IAAAA,MAFG;AAGHC,IAAAA;AAHG,GAAP;;AAMA,WAASF,KAAT,CAAeG,QAAf,EAAyBC,QAAzB,EAAmC;AAC/BP,IAAAA,YAAY,CAACQ,IAAb,CAAkBX,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAA8B,QAAhD,EAA0D;AAAEO,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAA1D,EACKE,IADL,CACUC,MAAM,IAAI;AACZ;AACAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeJ,MAAf,CAA7B;AACAT,MAAAA,OAAO,CAACS,MAAD,CAAP;AACA,aAAOA,MAAP;AACH,KANL;AAOH;;AAED,WAASN,MAAT,GAAkB;AACd;AACAO,IAAAA,YAAY,CAACI,UAAb,CAAwB,MAAxB;AACAd,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAV,IAAAA,OAAO,CAACyB,IAAR,CAAa,QAAb;AACH;;AAED,WAASX,MAAT,GAAkB;AACd,WAAOL,YAAY,CAACiB,GAAb,CAAiBrB,OAAjB,EAA0Ba,IAA1B,CAA+BP,QAA/B,CAAP;AACH;AACJ;;GAhCQP,c;UAEgBH,e,EACLF,iB,EACCA,iB","sourcesContent":["import { useSetRecoilState } from 'recoil';\n\nimport { history, useFetchWrapper } from '../_helpers';\nimport { authAtom, usersAtom } from '../_state';\n\nexport { useUserActions };\n\nfunction useUserActions () {\n    const baseUrl = process.env.REACT_APP_API_URL;\n    const fetchWrapper = useFetchWrapper();\n    const setAuth = useSetRecoilState(authAtom);\n    const setUsers = useSetRecoilState(usersAtom);\n\n    return {\n        login,\n        logout,\n        getAll\n    }\n\n    function login(username, password) {\n        fetchWrapper.post(process.env.REACT_APP_API_URL+\"/login\", { username, password })\n            .then(result => {\n                // store user details and jwt token in local storage to keep user logged in between page refreshes\n                localStorage.setItem('user', JSON.stringify(result));\n                setAuth(result);\n                return result;\n            });\n    }\n\n    function logout() {\n        // remove user from local storage, set auth state to null and redirect to login page\n        localStorage.removeItem('user');\n        setAuth(null);\n        history.push('/login');\n    }\n\n    function getAll() {\n        return fetchWrapper.get(baseUrl).then(setUsers);\n    }    \n}"]},"metadata":{},"sourceType":"module"}