{"ast":null,"code":"var _jsxFileName = \"/Users/lawson/code/newboba/boba/frontend-node/src/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport { authAtom } from './_state';\nimport { useUserActions } from './_actions';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useRecoilValue } from 'recoil';\nimport { useForm } from \"react-hook-form\";\nimport { useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(_ref) {\n  _s();\n\n  let {\n    setToken\n  } = _ref;\n  const auth = useRecoilValue(authAtom);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const userActions = useUserActions(); // form validation rules \n\n  const validationSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const formOptions = {\n    resolver: yupResolver(validationSchema)\n  }; // get functions to build form with useForm() hook\n\n  const {\n    register,\n    handleSubmit,\n    setError,\n    formState\n  } = useForm(formOptions);\n  const {\n    errors,\n    isSubmitting\n  } = formState;\n\n  function onSubmit(_ref2) {\n    let {\n      email,\n      password\n    } = _ref2;\n    userActions.login(email, password).then(result => setLoggedIn(true)).catch(error => {\n      setError('apiError', {\n        message: error\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-containerv\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-containerh\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-bubble\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loginform lf\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"logologin\",\n            src: \"/img/logo.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"lf\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"in cl si\",\n              type: \"email\",\n              name: \"email\",\n              placeholder: \"Email\",\n              ...register('email')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"in cl si\",\n              type: \"password\",\n              name: \"password\",\n              placeholder: \"Password\",\n              ...register('password')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"bt in\",\n              type: \"submit\",\n              onClick: handleSubmit(onSubmit)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"fp\",\n            children: \" Forgot password? \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Login, \"1NPtT9NERMNUiexHZQxvOTLOPFM=\", false, function () {\n  return [useRecoilValue, useUserActions, useForm];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/lawson/code/newboba/boba/frontend-node/src/Login.js"],"names":["React","useState","logo","authAtom","useUserActions","yupResolver","useRecoilValue","useForm","useEffect","Navigate","Yup","Login","setToken","auth","loggedIn","setLoggedIn","userActions","validationSchema","object","shape","email","string","required","password","formOptions","resolver","register","handleSubmit","setError","formState","errors","isSubmitting","onSubmit","login","then","result","catch","error","message"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport logo from './logo.svg';\nimport { authAtom } from './_state';\nimport { useUserActions } from './_actions';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useRecoilValue } from 'recoil';\nimport { useForm } from \"react-hook-form\";\nimport { useEffect } from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport * as Yup from 'yup';\n\n\nfunction Login({ setToken }) {\n  const auth = useRecoilValue(authAtom);\n  const [loggedIn, setLoggedIn] = useState(false)\n  const userActions = useUserActions();\n\n  // form validation rules \n  const validationSchema = Yup.object().shape({\n      email: Yup.string().required('Email is required'),\n      password: Yup.string().required('Password is required')\n  });\n  const formOptions = { resolver: yupResolver(validationSchema) };\n\n  // get functions to build form with useForm() hook\n  const { register, handleSubmit, setError, formState } = useForm(formOptions);\n  const { errors, isSubmitting } = formState;\n\n  function onSubmit({ email, password }) {\n      userActions.login(email, password).then(result => setLoggedIn(true))\n          .catch(error => {\n              setError('apiError', { message: error });\n        });\n  }\n    return (\n        <div className=\"login-containerv\">\n            <div className = \"login-containerh\">\n      <div className=\"container-bubble\">\n            <div className=\"loginform lf\">\n                <img className= \"logologin\" src=\"/img/logo.svg\"></img>\n                <form className=\"lf\" >\n                    <input className=\"in cl si\" type=\"email\" name=\"email\" placeholder=\"Email\" {...register('email')}></input>\n                    <input className=\"in cl si\" type=\"password\" name=\"password\" placeholder=\"Password\" {...register('password')}></input>\n                    <input className=\"bt in\" type=\"submit\" onClick={handleSubmit(onSubmit)}></input>\n                </form>\n                <span className=\"fp\" > Forgot password? </span>\n            </div>\n        </div>\n        </div>\n        </div>\n    );\n  }\nexport default Login;"]},"metadata":{},"sourceType":"module"}